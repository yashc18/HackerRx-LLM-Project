---
description: HackRx LLM-Powered Query-Retrieval System Architecture
globs: ["main*.py", "services/*.py", "utils/*.py"]
alwaysApply: true
---

# HackRx - Production-Grade LLM-Powered Query-Retrieval System

## Project Overview
This is a production-grade LLM-powered intelligent query-retrieval system designed for hackathon competitions. The system processes multi-format documents (PDF, DOCX, EML) and provides contextually accurate answers with confidence scoring.

## Core Architecture Principles

### Service Layer Structure
- All core business logic should be in the `services/` directory
- Each service should be a separate module with clear responsibilities
- Services should be async-first and handle errors gracefully
- Use dependency injection pattern for service initialization

### Code Organization
- Keep `main.py` focused on FastAPI routing and request handling
- Place utility functions in `utils/` directory
- Maintain separation between business logic and infrastructure concerns
- Use type hints consistently throughout the codebase

### Performance Requirements
- Simple queries: <2 seconds
- Complex queries: <5 seconds
- Batch processing: <30 seconds for 50 questions
- Health checks: <100ms
- Support 100+ concurrent users

### Error Handling
- Never let unhandled exceptions reach the user
- Provide meaningful error messages
- Implement graceful degradation
- Log errors with appropriate levels (DEBUG, INFO, WARNING, ERROR)
- Use fallback mechanisms for critical services

## Technology Stack
- **FastAPI**: High-performance async web framework
- **Ollama**: Local LLM inference (Llama 3.2, Mistral)
- **Sentence Transformers**: Embedding generation
- **FAISS**: Vector similarity search
- **NetworkX**: Graph-based relationship mapping
- **SQLite**: Lightweight database (hackathon version)
- **In-memory caching**: Simple cache implementation

Remember: This is a production-grade system designed for hackathon excellence. Every change should maintain the high standards of reliability, performance, and innovation that make this system competitive.
